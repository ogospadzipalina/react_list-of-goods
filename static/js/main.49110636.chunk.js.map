{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetically","setState","ALPHABET","sortByLength","LENGTH","reversedGoods","reset","visibleGoods","goods","sort","a","b","localeCompare","length","reverse","console","log","getReorderedGoods","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,cAAgB,WACd,EAAKJ,UAAS,SAAAL,GACZ,MAAO,CACLC,YAAaD,EAAMC,gBAjB3B,EAsBES,MAAQ,WACN,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KAzBlB,4CA6BE,WACE,IAAMU,EA3DH,SACLC,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENU,EAAY,YAAOC,GAiBzB,OAfIV,IAAaL,EAASS,UACxBK,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1Cb,IAAaL,EAASW,QACxBG,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAGvChB,GACFU,EAAaO,UAIfC,QAAQC,IAAIlB,EAAUD,GAEfU,EAsCgBU,CAAkBvB,EAAiB,CACtDI,SAAUoB,KAAKtB,MAAME,SACrBD,WAAYqB,KAAKtB,MAAMC,aAGzB,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWD,KAAKtB,MAAME,WAAaL,EAASS,SACxC,iBACA,0BACJmB,QAASH,KAAKlB,mBALhB,iCAUA,wBACEoB,KAAK,SACLD,UAAWD,KAAKtB,MAAME,WAAaL,EAASW,OACxC,iBACA,0BACJiB,QAASH,KAAKf,aALhB,4BAUA,wBACEiB,KAAK,SACLD,WAAqC,IAA1BD,KAAKtB,MAAMC,WAClB,iBACA,0BACJwB,QAASH,KAAKb,cALhB,sBASEa,KAAKtB,MAAME,WAAaL,EAASM,OACN,IAA1BmB,KAAKtB,MAAMC,aAET,wBACEuB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKZ,MAHhB,sBAUP,6BACGC,EAAae,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eAlFpC,GAAyBC,IAAMC,WCvD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.49110636.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reversedGoods = () => {\n    this.setState(state => {\n      return {\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const visibleGoods = getReorderedGoods(goodsFromServer, {\n      sortType: this.state.sortType,\n      isReversed: this.state.isReversed,\n    });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={this.state.sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.sortType === SortType.LENGTH\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.isReversed === true\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.reversedGoods}\n          >\n            Reverse\n          </button>\n          {(this.state.sortType !== SortType.NONE\n          || this.state.isReversed === true)\n             && (\n               <button\n                 type=\"button\"\n                 className=\"button is-danger is-light\"\n                 onClick={this.reset}\n               >\n                 Reset\n               </button>\n             )}\n        </div>\n\n        <ul>\n          {visibleGoods.map((good) => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}